* Fri Jan 29 2016 Mohammad Kolahdouzan <mohammad.kolahdouzan@gmail.com> 3.0.0
- replaced all String.getBytes() used for character encoding/decoding with
  CharsetEncoder/CharsetDecoder
- removed support for all encodings except utf-8

* Fri Nov 20 2015 Kenneth Kharma <kenneth.kharma@openx.com> 2.2.0
- only emit System::Startup and System::Shutdown when heartbeats are enabled
- added heartbeat support to emitter groups
- removed SNAPSHOT from version

* Thu Oct 08 2015 Kenneth Kharma <kenneth.kharma@openx.com> 2.1.1
- added DatagramSocketEventEmitter abstract class, which UnicastEventEmitter
and MulticastEventEmitter both extend
- moved socket interface to parent class
- made emitter group configs more flexible and added support for multicast
emitters
- added shutdown method for emitter groups

* Wed Jul 23 2014 Mohammad Kolahdouzan <mohammad.kolahdouzan@gmail.com> 2.0.0
- all emit methods now return number of bytes that were emitted.

* Tue Aug 07 08:00:00 PDT 2013 Robert Wong <rob@openx.com> 1.4.1
Fix bug where sampleRate was not correctly set.
* Tue Jul 30 08:00:00 PDT 2013 Robert Wong <rob@openx.com> 1.4.0
Added random sampling for event emission
* Wed Jun 05 08:00:00 PDT 2013 Preston Pfarner <preston.pfarner@gmail.com> 1.3.3
Significant speed increases for ArrayEvent.
* Thu Apr 11 11:23:26 PDT 2013 Frank Maritato <frank.maritato@openx.com> 1.3.1
Added ability to have arrays that can contain null elements.
* Wed Nov 28 16:21:24 PDT 2012 Frank Maritato <frank.maritato@openx.com> 1.2.2
Added ability to parse comments for use in automated tools (rcongiu)
Modified the DatagramEnqueuer so that if a port of 0 is passed in and assigned dynamically,
the port field is set to the chosen port (hiloboy0119)

* Thu Oct  4 11:30:56 PDT 2012 Frank Maritato <frank.maritato@openx.com> 1.2.0
Added Emitter Groups (pull request 3)

***
1.0.1 Changes
- Spec: https://github.com/lwes/lwes-website/blob/master/specs/lwes-v1
- Event class is now an interface. Implementation moved to MapEvent.
- ip_addr is now deprecated and should not be used. Use a byte array or a string for ip addresses.
- New data types: byte, float, double
- Array support
- Required/Optional
- Size limitations
- ArrayEvent added as a fast implementation of Event
- EventSystemException and subclasses are now Runtime exceptions
- Added FilterListener

***
0.2.5
Changed license to BSD.

***
0.2.4
- There is a memory leak in jdk 1.6.0_20 and earlier in
java.util.concurrent.LinkedBlockingQueue so I made a copy of that class and
fixed the memory leak.

***
0.2.3
- Allow one to override the size check that is done as part of the Event class. Size
really only matters if one is intending on emitting the created event not if they
are reading it from a file. Also allow introspection into Event to get the size in
bytes.

***
0.2.1 -> 0.2.2 Changes
- Added the ability to set a maximum capacity on the internal queue used by the
ThreadedProcessor. If you set the queue size, you can avoid out of memory exceptions,
but you run the risk of dropping events on the floor (it would depend on how fast
you are processing events and how big your network buffer is).

***
0.1.1 -> 0.2.0 Changes
- I removed the files that are autogenerated by javacc and made it part of the build.
The .java files will end up in target/generated-sources/javacc if you are interested in
seeing them.

- I also nuked the ant build.xml file. I don't want to support both ant and maven and imo,
maven wins. :)

- Added more unit tests

- Allow post event creation validation

- Use LinkedBlockingQueues where possible to retain event order and help synchronization.

- I removed AttributeNotSetException because throwing an exception if an attribute isn't set
in the event should not be the proper behavior (after all, HashMap and the like do not do this).

- Added comment parsing and retrieving functionality in TemplateDb
